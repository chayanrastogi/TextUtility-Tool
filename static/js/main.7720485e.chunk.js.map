{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","style","backgroundColor","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","role","aria-checked","htmlFor","TextForm","_useState","useState","_useState2","_slicedToArray","text","setText","Fragment","color","heading","rows","placeholder","value","onChange","event","target","border","disabled","length","newText","toUpperCase","showAlert","toLowerCase","split","map","el","charAt","slice","join","navigator","clipboard","writeText","filter","element","Alert","height","alert","typ","word","lower","capitalize","msg","propTypes","PropTypes","string","isRequired","defaultProps","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.7720485e.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode}`} style={{backgroundColor: `${props.mode}`}}>\r\n    <div className=\"container-fluid\">\r\n      <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n          </li>\r\n          \r\n        </ul>\r\n       \r\n        <div className={`form-check form-switch text-${props.mode==='#3FC1C9'?'dark':'#3FC1C9'}`}>\r\n            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" aria-checked id=\"flexSwitchCheckDefault\" />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n  )\r\n}\r\n","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n\r\n    const[text, setText] = useState(\"\");\r\n\r\n    const handleUpClick = () =>{\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to UpperCase\",\"success\");\r\n    }\r\n\r\n    const handleLowClick = () =>{\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to LowerCase\",\"success\");\r\n    }\r\n\r\n    const handleClearClick = () =>{\r\n        let newText = '';\r\n        setText(newText);\r\n        props.showAlert(\"Cleared Text\",\"success\");\r\n    }\r\n\r\n    const handleCapitalClick = () =>{\r\n        let newText = text.split(\" \").map(el => el.charAt(0).toUpperCase() + el.slice(1)).join(\" \");\r\n        setText(newText);\r\n        props.showAlert(\"Capitalized\",\"success\");\r\n    }\r\n\r\n    const handleCopyClick = () =>{\r\n        navigator.clipboard.writeText(text);\r\n        props.showAlert(\"Copied Text\",\"success\");\r\n    }\r\n\r\n    const handleExtraSpaces = () =>{\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Spaces Removed\",\"success\");\r\n    }\r\n\r\n    const handleOnChange = (event) =>{\r\n        setText(event.target.value);\r\n    }\r\n\r\n  return (\r\n    <>  \r\n     <div>\r\n      <h1 className = \"mb-4\"style={{color: props.mode==='#3FC1C9'?'black':'white'}}>{props.heading}</h1>\r\n      <div className=\"mb-3\" style={{color: props.mode==='#3FC1C9'?'black':'white'}} >\r\n        <textarea className=\"form-control\" id=\"myBox\" rows=\"8\" placeholder=\"Enter text here\" value={text} onChange={handleOnChange}></textarea>\r\n      </div>\r\n      <button className=\"btn mx-1 my-1\" style={{backgroundColor: \"#3FC1C9\", border:\"none\", color:\"black\"}} disabled={text.length===0} onClick={handleUpClick}>Convert to UpperCase</button>\r\n      <button className=\"btn mx-1 my-1\" style={{backgroundColor: \"#3FC1C9\", border:\"none\", color:\"black\"}} disabled={text.length===0} onClick={handleLowClick}>Convert to LowerCase</button>\r\n      <button className=\"btn mx-1 my-1\" style={{backgroundColor: \"#3FC1C9\", border:\"none\", color:\"black\"}} disabled={text.length===0} onClick={handleClearClick}>Clear Text</button>\r\n      <button className=\"btn mx-1 my-1\" style={{backgroundColor: \"#3FC1C9\", border:\"none\", color:\"black\"}} disabled={text.length===0} onClick={handleCapitalClick}>Capitalize</button>\r\n      <button className=\"btn mx-1 my-1\" style={{backgroundColor: \"#3FC1C9\", border:\"none\", color:\"black\"}} disabled={text.length===0} onClick={handleCopyClick}>Copy Text</button>\r\n      <button className=\"btn mx-1 my-1\" style={{backgroundColor: \"#3FC1C9\", border:\"none\", color:\"black\"}} disabled={text.length===0} onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n\r\n    </div>\r\n\r\n     <div className=\"container my-3\" style={{color: props.mode==='#3FC1C9'?'black':'white'}}>\r\n       <h2>Your text summary</h2>\r\n       <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} words</p>\r\n       <p>{text.length} characters</p>\r\n       <p>{0.008 * (text === \"\"? 0:text.split(\" \").length)} minutes read</p>\r\n       <h2>Preview</h2>\r\n       <p>{text.length>0?text:\"Nothing to preview\"}</p>\r\n     </div>\r\n\r\n\r\n  </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n\r\n    const capitalize = (word)=>{\r\n      const lower = word.toLowerCase();\r\n      return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n\r\n  return (\r\n    <div style={{ height: '50px'}}>\r\n      {props.alert && <div className={`alert alert-${props.alert.typ} alert-dismissible fade show`} role=\"alert\">\r\n          <strong>{capitalize(props.alert.typ)}</strong>: {props.alert.msg}\r\n      </div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Alert\r\n","\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport PropTypes from 'prop-types'\nimport TextForm from './components/TextForm';\nimport React,{ useState } from 'react';\nimport Alert from './components/Alert';\n\n\n\n  function App() {\n\n    const [mode,setMode] = useState('#3FC1C9');\n\n    const [alert,setAlert] = useState(null);\n\n    const showAlert = (message,type) =>{\n      setAlert({\n        msg: message,\n        typ: type\n      });\n\n      setTimeout(()=>{\n        setAlert(null);\n      },1500);\n\n    }\n\n    const toggleMode = () =>{\n      if(mode==='#3FC1C9'){\n        setMode('dark');\n        document.body.style.backgroundColor = '#042743';\n        showAlert(\"Dark Mode has been enabled\", \"success\");\n      }\n      else{\n        setMode('#3FC1C9');\n        document.body.style.backgroundColor = '#F9F7F7';\n        showAlert(\"Light Mode has been enabled\", \"success\");\n      }\n    }\n\n    return (\n      <>\n        <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode}/>\n        <Alert alert={alert}/>\n      \n        <div className=\"container my-3\">\n            <TextForm heading=\"Try TextUtils - Word counter, Character counter, Remove extra spaces \" mode={mode} showAlert={showAlert}/>\n        </div>\n      \n  </>\n    );\n  }\n\nNavbar.propTypes = {title: PropTypes.string.isRequired};\n\nNavbar.defaultProps = {title: 'Set title here'};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}